{
  "_from": "random-normal",
  "_id": "random-normal@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-2qC1+kyusVloF4M48qxS5jpuRok=",
  "_location": "/random-normal",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "random-normal",
    "fetchSpec": "latest",
    "name": "random-normal",
    "raw": "random-normal",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/random-normal/-/random-normal-1.0.0.tgz",
  "_shasum": "daa0b5fa4caeb15968178338f2ac52e63a6e4689",
  "_spec": "random-normal",
  "_where": "/home/ubuntu/M7011E",
  "author": {
    "email": "bubkoo.wy@gmail.com",
    "name": "bubkoo"
  },
  "bugs": {
    "url": "https://github.com/mock-end/random-normal/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "object-assign": "^4.0.1"
  },
  "deprecated": false,
  "description": "Return a normally-distributed random variate.",
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.9",
    "istanbul": "^0.4.2",
    "jshint": "^2.9.1",
    "mocha": "^2.4.5"
  },
  "homepage": "https://github.com/mock-end/random-normal#readme",
  "keywords": [
    "chance",
    "dice",
    "distributed",
    "mock",
    "normally",
    "random",
    "randomize",
    "randomly",
    "test",
    "variate"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "random-normal",
  "optionalDependencies": {},
  "readme": "# random-normal\n\n> Return a normally-distributed random variate.\n\n\n[![MIT License](https://img.shields.io/badge/license-MIT_License-green.svg?style=flat-square)](https://github.com/mock-end/random-normal/blob/master/LICENSE)\n\n[![build:?](https://img.shields.io/travis/mock-end/random-normal/master.svg?style=flat-square)](https://travis-ci.org/mock-end/random-normal)\n[![coverage:?](https://img.shields.io/coveralls/mock-end/random-normal/master.svg?style=flat-square)](https://coveralls.io/github/mock-end/random-normal)\n\n\n## Install\n\n```\n$ npm install --save random-normal \n```\n\n## Usage\n\n```js\nvar randomNormal = require('random-normal');\n\n// API\n// - randomNormal([options]);\n```\n\nBy default this starts with a mean of `0` and a standard deviation of `1` which is the standard normal distribution.\n\n```js\nrandomNormal()\n// => 0.4244767651300604\n```\nOptionally specify a mean and/or deviation.\n\n```js\n// Notice, since no deviation was specified, using the default of `1`\nrandomNormal({mean: 100})\n// => 99.68352269988522\n\n// For example, to get a random IQ (which by definition has a mean of 100\n// and a standard deviation of 15)\nrandomNormal({mean: 100, dev: 15})\n// => 85.11040121833615\n```\n\nUsed in combination with the above generators, this can be an extremely powerful way to get more realistic results as often “pure random” results fail to approximate the real world.\n\n\n## Related\n\n- [random-uuid](https://github.com/mock-end/random-uuid) - Return a random uuid.\n- [random-identity](https://github.com/mock-end/random-identity) - Return a random ID.\n- [random-dx](https://github.com/mock-end/random-dx) - Return a value equal to the roll of a die.\n- [random-hexhash](https://github.com/mock-end/random-hexhash) - Return a random hex hash.\n- [random-rpg](https://github.com/mock-end/random-rpg) - Return an array of dice values.\n- [random-file](https://github.com/mock-end/random-file) - Return a random file name with random extension.\n- [random-semver](https://github.com/mock-end/random-semver) - Return a random version.\n\n## Contributing\n\nPull requests and stars are highly welcome.\n\nFor bugs and feature requests, please [create an issue](https://github.com/mock-end/random-normal/issues/new).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mock-end/random-normal.git"
  },
  "scripts": {
    "lint": "jshint index.js",
    "prepublish": "npm test",
    "pretest": "npm run lint",
    "test": "mocha -R spec",
    "test:cov": "rm -rf ./test/coverage && istanbul cover _mocha --dir ./test/coverage -- -R spec",
    "test:rpt": "npm run test:cov && coveralls < ./test/coverage/lcov.info"
  },
  "version": "1.0.0"
}
